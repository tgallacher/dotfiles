#! /bin/sh
#
# Auto-detect monitor set up
# Used for configuring "bspwm"

internal_monitor=eDP-1
# external_monitor=DP-1

# monitor_add() {
# 	desktops=4 # How many desktops to move to the second monitor

# 	for desktop in $(bspc query -D -m $internal_monitor | sed "$desktops"q)
#   do
# 		bspc desktop $desktop --to-monitor $external_monitor
#   done

#   # Remove "Desktop" created by bspwm
#   bspc desktop Desktop --remove
# }

# monitor_remove() {
# 	bspc monitor $internal_monitor -a Desktop # Temp desktop because one desktop required per monitor

# 	# Move everything to external monitor to reorder desktops
# 	for desktop in $(bspc query -D -m $internal_monitor)
# 	do
# 		bspc desktop $desktop --to-monitor $external_monitor
# 	done

# 	# Now move everything back to internal monitor
# 	bspc monitor $external_monitor -a Desktop # Temp desktop

# 	for desktop in $(bspc query -D -m $external_monitor)
# 	do
# 		bspc desktop $desktop --to-monitor $internal_monitor
# 	done

# 	bspc desktop Desktop --remove # Remove temp desktops
# }

external_monitor_as_primary_only() {
  local external_monitor_name=$(xrandr -q | grep '\sconnected' | grep -v "$internal_monitor" | grep -Po '^[-\w]')

	xrandr --output "$external_monitor_name" --primary --auto --output "$internal_monitor" --off
}

laptop_monitor_as_primary_only() {
	xrandr --output "$internal_monitor" --primary --auto
}

num_displays_connected=$(xrandr -q | grep -w 'connected' | wc -l)

if [[ $num_displays_connected -gt 1 ]]; then
    external_monitor_as_primary_only
else
	laptop_monitor_as_primary_only
fi
