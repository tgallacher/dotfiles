{ self, config, pkgs, pkgs-unstable, vars, ... }:
{
  home.username = vars.username;
  home.homeDirectory = vars.homedir;

  home.packages = [
    pkgs.whatsapp-for-linux
  ];

  programs = {
    alacritty = {
      enable = true;
      package = pkgs-unstable.alacritty;
      # see: https://alacritty.org/config-alacritty.html
      settings = {
        import = [ "~/.alacritty/themes/themes/github_dark_default.yaml" ];
        cursor = {
          style = {
            shape = "Block";
            blinking = "on";
            vi_mode_style = "on";
            unfocussed_hollow = true;
          };
          vi_mode_style = { shape = "Underline"; };
        };
        draw_bold_text_with_bright_colors = true;
        fullscreen = false;
        font = {
          size = 10;
          normal = {
            family = "JetBrainsMono Nerd Font";
            style = "Regular";
          };
          bold = {
            family = "JetBrainsMono Nerd Font";
            style = "Bold";
          };
          italic = {
            family = "JetBrainsMono Nerd Font";
            style = "Bold";
          };
          # Offset is the extra space around each character. offset.y can be thought of
          # as modifying the linespacing, and offset.x as modifying the letter spacing.
          offset = {
            x = 0;
            y = 0;
          };
          # Glyph offset determines the locations of the glyphs within their cells with
          # the default being at the bottom. Increase the x offset to move the glyph to
          # the right, increase the y offset to move the glyph upward.
          glyph_offset = {
            x = 0;
            y = 0;
          };
        };
        key_bindings = [
          { key = "Key3"; mods = "Alt"; chars = "#"; } # Alt + #
        ];
        mouse = {
          hide_when_typing = true;
        };
        save_to_clipboard = true;
        window = {
          dimensions = { lines = 3; columns = 3; };
          padding = { x = 4; y = 4; };
          # Window decorations
          # Setting this to false will result in window without borders and title bar.
          decorations = "full";
          startup_mode = "Windowed";
          dynamic_title = true;
          opacity = 1.0;
        };
      };
    };
    git = {
      enable = true;
      aliases = {
        co = "checkout";
        ci = "commit";
        st = "status -s";
        br = "branch";
        last = "log -1 HEAD";
        dwdiff = "!f() { git diff $@ | dwdiff --diff-input -P -c | less -R; }; f";
        plog = "!l() { git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit $@; }; l";
        plog10 = "plog -10";
        p10 = "plog -10";
        p20 = "plog -20";
      };
      delta = {
        enable = true;
        options = {
          navigate = true; # use n and N to move between diff sections
          light = false; # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)
          side-by-side = true;
          line-numbers = true;
        };
      };
      extraConfig = {
        core = { editor = "vim"; };
        merge = { conflictstyle = "diff3"; };
        diff = { colorMoved = "default"; };
        rebase = { instructionFormat = "(%an) %s"; };
        init = { defaultBranch = "main"; };
        advice = { skippedCherryPicks = false; };
        # interactive = { diffFilter = "delta --color-only"; };
        push = {
          default = "simple";
          autoSetupRemote = true;
        };
      };
      userEmail = "tgallacher@users.noreply.github.com";
      userName = "Tom Gallacher";
      ignores = [
        ".DS_Store"
        # Logs
        "logs"
        "*.log"
        "npm-debug.log*"
        "yarn-debug.log*"
        "yarn-error.log*"
        # Runtime data
        "pids"
        "*.pid"
        "*.seed"
        "*.pid.lock"
        # Directory for instrumented libs generated by jscoverage/JSCover
        "lib-cov"
        # Coverage directory used by tools like istanbul
        "coverage"
        # nyc test coverage
        ".nyc_output"
        # Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
        ".grunt"
        # Bower dependency directory (https://bower.io/)
        "bower_components"
        # node-waf configuration
        ".lock-wscript"
        # Compiled binary addons (https://nodejs.org/api/addons.html)
        "build/Release"
        # Dependency directories
        "node_modules/"
        # Typescript v1 declaration files
        "typings/"
        # Optional npm cache directory
        ".npm"
        # Optional eslint cache
        ".eslintcache"
        # Optional REPL history
        ".node_repl_history"
        # Output of 'npm pack'
        "*.tgz"
        # Yarn Integrity file
        ".yarn-integrity"
        # dotenv environment variables file
        ".env"
        # next.js build output
        ".next"
      ];
    };
  };

  editorconfig = {
    enable = true;
    settings = {
      "*" = {
        trim_trailing_whitespace = true;
        insert_final_newline = true;
        indent_style = "space";
        end_of_line = "lf";
        indent_size = 2;
        charset = "utf-8";
      };
    };
  };

  # Manage Dotfiles
  home.file = {
    ".alacritty/themes" = {
      source = ../../../alacritty/themes;
      recursive = true;
    };
    # TODO: Better way to get flake location?
    ".config/nvim/".source = config.lib.file.mkOutOfStoreSymlink "${vars.homedir}/Code/${vars.username}/dotfiles/nvim/.config/nvim";
    ".config/tmux/tmux.conf".source = ../../../tmux/.config/tmux/tmux.conf;
    ".zshenv".source = ../../../zsh/.zshenv;
    ".config/zsh" = {
      source = ../../../zsh/.config/zsh;
      recursive = true;
    };
  };

  # Let Home Manager manage itself
  programs.home-manager.enable = true;
  home.stateVersion = "23.05";
}
