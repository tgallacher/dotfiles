{ self, config, pkgs, upkgs, vars, ... }:
let
  alacrittyFileExtension = version: if pkgs.lib.versionAtLeast version "0.13" then "toml" else "yml";
in
{
  home.username = vars.username;
  home.homeDirectory = vars.homedir;

  home.packages = [
    pkgs.whatsapp-for-linux
    upkgs.alacritty-theme
  ];

  programs = {
    alacritty = {
      enable = true;
      package = upkgs.alacritty;
      # see: https://alacritty.org/config-alacritty.html
      settings = {
        import = [
          "${upkgs.alacritty-theme}/catppuccin_mocha.${alacrittyFileExtension ( upkgs.alacritty.version )}"
        ];
        live_config_reload = true;
        cursor = {
          style = {
            shape = "Block";
            blinking = "On";
          };
          # unfocussed_hollow = true;
          vi_mode_style = { shape = "Underline"; };
        };
        colors.draw_bold_text_with_bright_colors = true;
        # fullscreen = false;
        font = {
          size = 10;
          normal = {
            family = "JetBrainsMono Nerd Font";
            style = "Regular";
          };
          bold = {
            family = "JetBrainsMono Nerd Font";
            style = "Bold";
          };
          italic = {
            family = "JetBrainsMono Nerd Font";
            style = "Bold";
          };
          # Offset is the extra space around each character. offset.y can be thought of
          # as modifying the linespacing, and offset.x as modifying the letter spacing.
          offset = {
            x = 0;
            y = 0;
          };
          # Glyph offset determines the locations of the glyphs within their cells with
          # the default being at the bottom. Increase the x offset to move the glyph to
          # the right, increase the y offset to move the glyph upward.
          glyph_offset = {
            x = 0;
            y = 0;
          };
        };
        keyboard.bindings = [
          { key = "Key3"; mods = "Alt"; chars = "#"; } # Alt + #
        ];
        mouse = {
          hide_when_typing = true;
        };
        # save_to_clipboard = true;
        window = {
          dimensions = { lines = 30; columns = 160; };
          padding = { x = 4; y = 4; };
          # Window decorations
          # Setting this to false will result in window without borders and title bar.
          decorations = "full";
          startup_mode = "Windowed";
          dynamic_title = true;
          opacity = 1.0;
        };
      };
    };
    git = {
      enable = true;
      aliases = {
        co = "checkout";
        ci = "commit";
        st = "status -s";
        br = "branch";
        last = "log -1 HEAD";
        dwdiff = "!f() { git diff $@ | dwdiff --diff-input -P -c | less -R; }; f";
        plog = "!l() { git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit $@; }; l";
        plog10 = "plog -10";
        p10 = "plog -10";
        p20 = "plog -20";
      };
      delta = {
        enable = true;
        options = {
          navigate = true; # use n and N to move between diff sections
          light = false; # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)
          side-by-side = true;
          line-numbers = true;
        };
      };
      extraConfig = {
        core = { editor = "vim"; };
        merge = { conflictstyle = "diff3"; };
        diff = { colorMoved = "default"; };
        rebase = { instructionFormat = "(%an) %s"; };
        init = { defaultBranch = "main"; };
        advice = { skippedCherryPicks = false; };
        # interactive = { diffFilter = "delta --color-only"; };
        push = {
          default = "simple";
          autoSetupRemote = true;
        };
      };
      userEmail = "tgallacher@users.noreply.github.com";
      userName = "Tom Gallacher";
      ignores = [
        ".DS_Store"
        # Logs
        "logs"
        "*.log"
        "npm-debug.log*"
        "yarn-debug.log*"
        "yarn-error.log*"
        # Runtime data
        "pids"
        "*.pid"
        "*.seed"
        "*.pid.lock"
        # Directory for instrumented libs generated by jscoverage/JSCover
        "lib-cov"
        # Coverage directory used by tools like istanbul
        "coverage"
        # nyc test coverage
        ".nyc_output"
        # Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
        ".grunt"
        # Bower dependency directory (https://bower.io/)
        "bower_components"
        # node-waf configuration
        ".lock-wscript"
        # Compiled binary addons (https://nodejs.org/api/addons.html)
        "build/Release"
        # Dependency directories
        "node_modules/"
        # Typescript v1 declaration files
        "typings/"
        # Optional npm cache directory
        ".npm"
        # Optional eslint cache
        ".eslintcache"
        # Optional REPL history
        ".node_repl_history"
        # Output of 'npm pack'
        "*.tgz"
        # Yarn Integrity file
        ".yarn-integrity"
        # dotenv environment variables file
        ".env"
        # next.js build output
        ".next"
      ];
    };
    tmux = {
      enable = true;
      package = upkgs.tmux;
      baseIndex = 1;
      clock24 = true;
      disableConfirmationPrompt = false;
      keyMode = "vi";
      mouse = true;
      prefix = "C-t";
      terminal = "xterm-256color";
      extraConfig = ''
        # set-option -g renumber-windows on             # Re-number remaining windows when one is closed
        set -g status-position top

        unbind -T copy-mode-vi MouseDragEnd1Pane        # don"t exit copy mode when dragging with mouse

        # vim keys to switch windows
        bind -n M-h previous-window
        bind -n M-l next-window

        # Keep zoom when moving up/down panes
        bind-key -n M-k select-pane -U \; resize-pane -Z
        bind-key -n M-j select-pane -D \; resize-pane -Z

        # Easier window split + retain cwd
        unbind '"'
        bind v split-window -v -c "#{pane_current_path}"
        unbind %
        bind h split-window -h -c "#{pane_current_path}"

        # Easy config reload
        bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded..."

        # Set copy mode to immitate Vim keybindings.
        # Here we adjust the key bind to the copy-mode-vi table in tmux, eg. does not require prefix
        bind-key -T copy-mode-vi v send-keys -X begin-selection
        bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
        bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
      '';
      plugins = with upkgs; [
        tmuxPlugins.yank
        tmuxPlugins.sessionist
        tmuxPlugins.vim-tmux-navigator
        {
          plugin = tmuxPlugins.catppuccin;
          extraConfig = ''
            set -g @catppuccin_flavour "mocha"
            set -g @catppuccin_window_tabs_enabled on
            set -g @catppuccin_date_time "%Y-%m-%d %H:%M"
            set -g @catppuccin_window_status_enable "no"
            set -g @catppuccin_window_status_icon_enable "yes"
            set -g @catppuccin_icon_window_last "󰖰"
            set -g @catppuccin_icon_window_current "󰖯"
            set -g @catppuccin_icon_window_zoom "󰁌"
            set -g @catppuccin_icon_window_mark "󰃀"
            set -g @catppuccin_icon_window_silent "󰂛"
            set -g @catppuccin_icon_window_activity "󰖲"
            set -g @catppuccin_icon_window_bell "󰂞"


            # set -g @catppuccin_window_current_format_directory_text "#{b:pane_current_path}"
            set -g @catppuccin_window_right_separator "█ "
            set -g @catppuccin_window_number_position "right"
            set -g @catppuccin_window_middle_separator " | "
            set -g @catppuccin_window_default_fill "none"  # all | number | none
            set -g @catppuccin_window_current_fill "all"

            set -g @catppuccin_status_fill "icon" # icon | all
            set -g @catppuccin_status_connect_separator "no" # disable blending of the separator to tmux bg
            set -g @catppuccin_status_modules_left "session"
            # opts: application | directory | session | user | host | date_time | battery
            set -g @catppuccin_status_modules_right "application directory date_time"
            set -g @catppuccin_status_left_separator "█"
            set -g @catppuccin_status_right_separator "█ "

            set -g @catppuccin_application_color "#e27878"
            set -g @catppuccin_directory_color "#a093c7"
            set -g @catppuccin_session_color "#b4be82"
            set -g @catppuccin_date_time_color "#84a0c6"
          '';
        }
        # Note: must come after catpuccin, or anything that edits the right status bar
        {
          plugin = tmuxPlugins.resurrect;
          extraConfig = "set -g @resurrect-capture-pane-contents 'on'";
        }
        {
          plugin = tmuxPlugins.continuum;
          extraConfig = "set -g @continuum-restore 'on'";
        }
      ];
    };
  };

  editorconfig = {
    enable = true;
    settings = {
      "*" = {
        trim_trailing_whitespace = true;
        insert_final_newline = true;
        indent_style = "space";
        end_of_line = "lf";
        indent_size = 2;
        charset = "utf-8";
      };
    };
  };

  # Manage Dotfiles
  home.file = {
    # TODO: Better way to get flake location?
    ".config/nvim/".source = config.lib.file.mkOutOfStoreSymlink "${vars.homedir}/Code/${vars.username}/dotfiles/nvim/.config/nvim";
    ".zshenv".source = ../../../zsh/.zshenv;
    ".config/zsh" = {
      source = ../../../zsh/.config/zsh;
      recursive = true;
    };
  };

  # Let Home Manager manage itself
  programs.home-manager.enable = true;
  home.stateVersion = "23.05";
}
